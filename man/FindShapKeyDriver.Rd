% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindShapKeyDriver.R
\name{FindShapKeyDriver}
\alias{FindShapKeyDriver}
\title{Identify Key Driver Genes Using SHAP and XGBoost}
\usage{
FindShapKeyDriver(
  seurat_obj,
  conditions,
  set_case,
  top_n = 50,
  max_depth = 4,
  eta = 0.1,
  nrounds = 50,
  nthread = 2,
  variable_genes = NULL,
  out_dir = NULL,
  mode = "full",
  train_fraction = 0.8,
  nfold = 5,
  seed = 123
)
}
\arguments{
\item{seurat_obj}{A \code{Seurat} object with normalized gene expression and metadata.}

\item{conditions}{Column name in \code{seurat_obj@meta.data} indicating the condition labels.}

\item{set_case}{Character. Case label to compare against all other values in \code{conditions}.}

\item{top_n}{Integer. Number of top SHAP-ranked genes to return (default: 50).}

\item{max_depth}{Integer. Maximum depth of each XGBoost tree (default: 4).}

\item{eta}{Numeric. Learning rate (shrinkage) for XGBoost (default: 0.1).}

\item{nrounds}{Integer. Number of boosting rounds for XGBoost (default: 50).}

\item{nthread}{Integer. Number of CPU threads to use for XGBoost (default: 2).}

\item{variable_genes}{Optional character vector of genes to use. If \code{NULL}, uses \code{VariableFeatures(seurat_obj)}.}

\item{out_dir}{Optional directory to save results. If \code{NULL}, results are not saved to disk.}

\item{mode}{Character. Training mode: \code{"full"}, \code{"split"}, or \code{"cv"} (default: \code{"full"}).}

\item{train_fraction}{Numeric. Fraction of cells used for training in \code{"split"} mode (default: 0.8).}

\item{nfold}{Integer. Number of folds for cross-validation (default: 5).}

\item{seed}{Integer. Random seed for reproducibility (default: 123).}
}
\value{
A modified \code{Seurat} object with SHAP results stored in \code{@misc$shap}, including:
\itemize{
\item \code{model}: Trained XGBoost model (only in \code{"full"} and \code{"split"} modes)
\item \code{shap_result}: Raw SHAP decomposition object (only in \code{"full"} and \code{"split"} modes)
\item \code{shap_long}: Long-format SHAP values (per-cell, per-gene)
\item \code{shap_summary}: Mean absolute SHAP values per gene
\item \code{key_drivers}: Top \code{top_n} SHAP-ranked genes
\item \code{variable_genes}: Genes used in the model
\item \code{test_auc}: AUC on held-out test set (only in \code{"split"} mode)
\item \code{auc_per_fold}: Vector of AUC scores per fold (only in \code{"cv"} mode)
\item \code{mean_auc}: Mean AUC across folds (only in \code{"cv"} mode)
\item \code{mode}: Training mode used
}
}
\description{
This function trains an XGBoost classifier to distinguish a specified case group from others
using gene expression data from a Seurat object. SHAP (SHapley Additive exPlanations) values
are computed to quantify the contribution of each gene to the model predictions. The top
SHAP-ranked genes are returned as key driver candidates.
}
\details{
Three model training modes are supported via the \code{mode} parameter:
\itemize{
\item \code{"full"}: Train on the entire dataset (no test set, no cross-validation).
\item \code{"split"}: Randomly split data into training and testing subsets.
\item \code{"cv"}: Perform k-fold cross-validation.
}
In \code{"split"} mode, test set AUC is computed and stored. In \code{"cv"} mode,
per-fold AUCs and mean AUC are computed. In \code{"full"} mode, AUC is not computed to avoid overestimation.

SHAP results and metadata are stored in \code{seurat_obj@misc$shap}. Optionally, results are written to disk
under \code{out_dir}, with all files documented in an \code{info.txt}.
}
\section{Output Files (if \code{out_dir} is provided)}{

\itemize{
\item \code{model.txt}: XGBoost model summary (not in \code{"cv"} mode)
\item \code{shap_result.rds}: SHAP decomposition object (not in \code{"cv"} mode)
\item \code{shap_summary.txt}: Mean absolute SHAP value per gene
\item \code{variable_genes.txt}: List of genes used for model training
\item \code{key_drivers.txt}: Top SHAP-ranked genes
\item \code{shap_long.rds}: Full SHAP values in long format
\item \code{auc.txt}: AUC from held-out test set (only in \code{"split"} mode)
\item \code{auc_per_fold.txt}: AUC per fold (only in \code{"cv"} mode)
\item \code{info.txt}: Summary of saved outputs
}
}

\examples{
# Run SHAP analysis in full mode
seurat_obj <- FindShapKeyDriver(seurat_obj, conditions = "Diagnosis", set_case = "AD", top_n = 30)

# Run in split mode with custom output directory
seurat_obj <- FindShapKeyDriver(seurat_obj, conditions = "Diagnosis", set_case = "AD",
                                mode = "split", out_dir = "results/shap/")

# Run in 5-fold CV mode
seurat_obj <- FindShapKeyDriver(seurat_obj, conditions = "Diagnosis", set_case = "AD",
                                mode = "cv", nfold = 5)
}
